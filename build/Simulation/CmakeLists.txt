# Define the Simulation project
add_executable(Simulation)

set_target_properties(Simulation PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/${OUTPUT_DIR}/Simulation"
    ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/${OUTPUT_DIR}/Simulation"
    LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin/${OUTPUT_DIR}/Simulation"
    OUTPUT_NAME "Simulation"
)

# Collect all header and source files recursively
file(GLOB_RECURSE SIM_HEADERS "${CMAKE_CURRENT_SOURCE_DIR}/src/*.h")
file(GLOB_RECURSE SIM_SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")

# Apply the function to categorize files correctly
assign_source_group(${SIM_HEADERS} ${SIM_SOURCES})

# Assign source files
target_sources(Simulation PRIVATE ${SIM_SOURCES})

# Include directories
target_include_directories(Simulation PRIVATE
    "${CMAKE_BINARY_DIR}/SIDT/vendor/spdlog/include"
    "${CMAKE_BINARY_DIR}/SIDT/src"
)

# âœ… Link SIDT instead of redefining it
target_link_libraries(Simulation PRIVATE SIDT)

set_target_properties(Simulation PROPERTIES
    CXX_STANDARD 20
    CXX_STANDARD_REQUIRED YES
    MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>"
)

# Platform-specific settings
if (WIN32)
    target_compile_definitions(Simulation PRIVATE SD_PLATFORM_WINDOWS)

        # Post-build command to copy the output to Simulation
    add_custom_command(TARGET Simulation POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E copy_if_different
        $<TARGET_FILE:SIDT>
        $<TARGET_FILE_DIR:Simulation>
    )
endif()

if (MSVC)
    target_compile_options(Simulation PRIVATE /utf-8)
endif()

target_compile_definitions(Simulation PRIVATE 
    $<$<CONFIG:Debug>:SD_DEBUG>
    $<$<CONFIG:Release>:SD_RELEASE>
    $<$<CONFIG:Dist>:SD_DIST>
)

target_compile_options(Simulation PRIVATE 
    $<$<CONFIG:Debug>:/MDd>
    $<$<CONFIG:Release>:/MD>
    $<$<CONFIG:Dist>:/MD>
    $<$<CONFIG:Debug>:/Zi>
    $<$<CONFIG:Release>:/O2>
    $<$<CONFIG:Dist>:/O2>
)

set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT Simulation)
